Technical Debt:
  ☐ Need to extract command parsing for more complex commands @created(2020-05-30)
  ☐ Use Proxy objects to reduce duplicated code in Things @created(2020-06-05)

Bugs:
  ☐ Most commands fail dramatically when parsing unexpected strings @created(2020-04-19)

Features:
  ☐ Command history for WebSocket client
  ☐ Command aliases

  Access Control:
    ☐ Use Passport.js to authenticate users @created(2020-04-25)
    ☐ Add admin role to allow use of admin commands @created(2020-05-30)

  Multiplayer:
    ☐ Add multiple connections @created(2020-04-25)
    ☐ Broadcast what is said to the current room @created(2020-04-25)
    ☐ Broadcast what is emoted to the current room @created(2020-04-25)
    ☐ Broadcast what is shouted to current and adjacent rooms @created(2020-04-25)
    ☐ Send whispers between players @created(2020-04-25)

  Rooms:
    ☐ Edit room to set name, description, and greeting message @created(2020-04-25)
    ☐ Display greeting message when arriving in room @created(2020-04-25)
    ☐ Deprecate rename and describe commands from room @created(2020-04-25)

  Doors:
    ☐ Create door with source and destination @created(2020-04-25)
    ☐ Create door with sources and destinations @created(2020-04-25)
    ☐ Edit door to set name, description, locations, destinations, and traversal message @created(2020-04-25)
    ☐ Look at doors by name @created(2020-04-25)
    ☐ Look at doors by ID @created(2020-04-25)
    ☐ Use doors by name @created(2020-04-25)
    ☐ Display description of door when looked at @created(2020-04-25)
    ☐ Display traversal message when using a door @created(2020-04-25)
    ☐ Select random destination when using door if there are multiple @created(2020-04-25)
  
  Objects:
    ☐ Look at objects by ID @created(2020-04-25)
    ☐ Use objects by ID @created(2020-04-25)
    ☐ Look at objects by name @created(2020-04-25)
    ☐ Use objects by name @created(2020-04-25)

Archive:
  ✔ Lay foundation for Redis connections to be pooled @created(2020-06-05) @done(2020-06-05) @project(Technical Debt)
  ✔ Eliminate dungeon @created(2020-06-05) @done(2020-06-05) @project(Technical Debt)
  ✔ Create door with destination @created(2020-04-25) @started(2020-06-01) @done(2020-06-05) @project(Features.Doors)
  ✔ Use doors by ID @created(2020-04-25) @started(2020-06-01) @done(2020-06-05) @project(Features.Doors)
  ✔ Need config spec @created(2020-05-29) @done(2020-05-30) @project(Technical Debt)
  ✔ Doors should be nodes @created(2020-04-25) @done(2020-05-29) @project(Technical Debt)
  ✔ Need context spec @created(2020-05-29) @done(2020-05-30) @project(Technical Debt)
  ✔ Display doors in the room @created(2020-04-25) @done(2020-05-29) @project(Features.Rooms)
  ✔ Create door to nowhere @created(2020-04-25) @done(2020-05-26) @project(Features.Doors)
  ✔ /teleport room {id} @created(2020-04-19) @done(2020-04-24)
  ✔ Switch to use RedisGraph.close()
  ✔ Change Hub to be marked by property rather than ID (data has no meaning violation)
  ✔ Refactor Cypher queries to use internal ID over UUID
  ✔ Refactor Cypher queries to return individual fields over nodes
  ✔ Implement /list command to list rooms
  ✔ async executes
  ✔ Implement /create command to create rooms
  ✔ Write tests for session
  ✔ Implement /describe command to update description of the room
  ✔ Break out WebSocket and HttpServer to own classes
  ✔ Implement error command
  ✔ Implement /emote command to emote things
  ✔ Use MERGE ON CREATE for creating initial room
  ✔ Implement /look command to see description of room
  ✔ Display prompt with name of current room
  ✔ Create 'The Hub' at server launch if it doesn't exist
  ✔ Display welcome message upon connection
  ✔ Write simple echo server
  ✔ Write simple WebSocket client
